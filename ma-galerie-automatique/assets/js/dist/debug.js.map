{
  "version": 3,
  "sources": ["../src/shared/sprintf.js", "../src/debug.js"],
  "sourcesContent": ["const TOKEN_REGEX = /%(\\d+\\$)?[sd]/g;\n\nconst createFallbackSprintf = () => (format, ...args) => {\n    let autoIndex = 0;\n\n    return String(format).replace(TOKEN_REGEX, (match, position) => {\n        let argIndex;\n        const type = match.charAt(match.length - 1);\n\n        if (position) {\n            const numericIndex = parseInt(position.slice(0, -1), 10);\n\n            if (Number.isNaN(numericIndex) || numericIndex <= 0) {\n                return '';\n            }\n\n            argIndex = numericIndex - 1;\n        } else {\n            argIndex = autoIndex;\n            autoIndex += 1;\n        }\n\n        const value = argIndex >= 0 && argIndex < args.length ? args[argIndex] : undefined;\n\n        if (type === 'd') {\n            const coerced = parseInt(value, 10);\n            return Number.isNaN(coerced) ? '' : String(coerced);\n        }\n\n        if (typeof value === 'undefined') {\n            return '';\n        }\n\n        return String(value);\n    });\n};\n\nexport const createSprintf = (i18n) => {\n    if (i18n && typeof i18n.sprintf === 'function') {\n        return i18n.sprintf;\n    }\n\n    return createFallbackSprintf();\n};\n\nexport const createTranslate = (i18n) => {\n    if (i18n && typeof i18n.__ === 'function') {\n        return i18n.__;\n    }\n\n    return (text) => text;\n};\n\nexport const resolveI18n = (globalObject) => {\n    if (!globalObject || typeof globalObject !== 'object') {\n        return null;\n    }\n\n    if (globalObject.wp && globalObject.wp.i18n) {\n        return globalObject.wp.i18n;\n    }\n\n    return null;\n};\n\nexport const getSharedI18n = () => resolveI18n(typeof window !== 'undefined' ? window : globalThis);\n\nexport const getSharedSprintf = () => createSprintf(getSharedI18n());\n\nexport const getSharedTranslate = () => createTranslate(getSharedI18n());\n\nexport default {\n    createSprintf,\n    createTranslate,\n    getSharedI18n,\n    getSharedSprintf,\n    getSharedTranslate,\n};\n", "import { createSprintf, createTranslate, resolveI18n } from './shared';\n\n(function(global) {\n    \"use strict\";\n\n    const mgaI18n = resolveI18n(global);\n    const mga__ = createTranslate(mgaI18n);\n    const mgaSprintf = createSprintf(mgaI18n);\n\n    const state = {\n        panel: null,\n        logContainer: null,\n        timerInterval: null,\n        startTime: 0,\n        active: false,\n        forceOpenAttached: false,\n    };\n\n    function createPanel() {\n        if (state.panel) {\n            return state.panel;\n        }\n\n        const existing = document.getElementById('mga-debug-panel');\n        if (existing) {\n            state.panel = existing;\n            state.logContainer = existing.querySelector('#mga-debug-log');\n            return state.panel;\n        }\n\n        const panel = document.createElement('div');\n        panel.id = 'mga-debug-panel';\n        panel.style.cssText = 'position: fixed; bottom: 10px; right: 10px; background: #23282d; color: #fff; border: 2px solid #0073aa; padding: 15px; font-family: monospace; font-size: 12px; z-index: 999999; max-width: 450px; box-shadow: 0 5px 15px rgba(0,0,0,0.5);';\n\n        const title = document.createElement('h4');\n        title.style.cssText = 'margin: 0 0 10px; padding: 0 0 10px; border-bottom: 1px solid #444; font-size: 14px;';\n        title.textContent = mga__( 'Debug MGA Performance', 'lightbox-jlg' );\n        panel.appendChild(title);\n\n        const statsGrid = document.createElement('div');\n        statsGrid.style.cssText = 'display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 10px; margin-bottom: 10px;';\n\n        const statusCard = document.createElement('div');\n        statusCard.style.cssText = 'background: #1c1f23; padding: 6px 8px; border-radius: 4px; grid-column: 1 / -1;';\n        const statusLabel = document.createElement('strong');\n        statusLabel.style.cssText = 'display: block; margin-bottom: 4px; color: #ccc;';\n        statusLabel.textContent = mga__( 'Statut\u00A0:', 'lightbox-jlg' );\n        const statusValue = document.createElement('div');\n        statusValue.id = 'mga-debug-status';\n        statusValue.style.cssText = 'font-size: 14px; color: #4CAF50;';\n        statusValue.textContent = mga__( 'Inconnu', 'lightbox-jlg' );\n        statusCard.appendChild(statusLabel);\n        statusCard.appendChild(statusValue);\n        statsGrid.appendChild(statusCard);\n\n        const realtimeCard = document.createElement('div');\n        realtimeCard.style.cssText = 'background: #1c1f23; padding: 6px 8px; border-radius: 4px;';\n        const realtimeLabel = document.createElement('strong');\n        realtimeLabel.style.cssText = 'display: block; margin-bottom: 4px; color: #ccc;';\n        realtimeLabel.textContent = mga__( 'Chronom\u00E8tre r\u00E9el\u00A0:', 'lightbox-jlg' );\n        const realtimeValue = document.createElement('div');\n        realtimeValue.id = 'mga-debug-realtime';\n        realtimeValue.style.cssText = 'font-size: 16px; color: #4CAF50;';\n        realtimeValue.textContent = mgaSprintf( mga__( '%ss', 'lightbox-jlg' ), '0.00' );\n        realtimeCard.appendChild(realtimeLabel);\n        realtimeCard.appendChild(realtimeValue);\n        statsGrid.appendChild(realtimeCard);\n\n        const autoplayCard = document.createElement('div');\n        autoplayCard.style.cssText = 'background: #1c1f23; padding: 6px 8px; border-radius: 4px;';\n        const autoplayLabel = document.createElement('strong');\n        autoplayLabel.style.cssText = 'display: block; margin-bottom: 4px; color: #ccc;';\n        autoplayLabel.textContent = mga__( 'Timer Autoplay\u00A0:', 'lightbox-jlg' );\n        const autoplayValue = document.createElement('div');\n        autoplayValue.id = 'mga-debug-autoplay-time';\n        autoplayValue.style.cssText = 'font-size: 16px; color: #FFC107;';\n        autoplayValue.textContent = mga__( 'N/A', 'lightbox-jlg' );\n        autoplayCard.appendChild(autoplayLabel);\n        autoplayCard.appendChild(autoplayValue);\n        statsGrid.appendChild(autoplayCard);\n\n        const contentCard = document.createElement('div');\n        contentCard.style.cssText = 'background: #1c1f23; padding: 6px 8px; border-radius: 4px;';\n        const contentLabel = document.createElement('strong');\n        contentLabel.style.cssText = 'display: block; margin-bottom: 4px; color: #ccc;';\n        contentLabel.textContent = mga__( 'Zone de contenu\u00A0:', 'lightbox-jlg' );\n        const contentValue = document.createElement('div');\n        contentValue.id = 'mga-debug-content-area';\n        contentValue.style.cssText = 'font-size: 13px; color: #03A9F4; word-break: break-all;';\n        contentValue.textContent = mga__( 'N/A', 'lightbox-jlg' );\n        contentCard.appendChild(contentLabel);\n        contentCard.appendChild(contentValue);\n        statsGrid.appendChild(contentCard);\n\n        const triggerCard = document.createElement('div');\n        triggerCard.style.cssText = 'background: #1c1f23; padding: 6px 8px; border-radius: 4px;';\n        const triggerLabel = document.createElement('strong');\n        triggerLabel.style.cssText = 'display: block; margin-bottom: 4px; color: #ccc;';\n        triggerLabel.textContent = mga__( 'Images d\u00E9clencheuses\u00A0:', 'lightbox-jlg' );\n        const triggerValue = document.createElement('div');\n        triggerValue.id = 'mga-debug-trigger-img';\n        triggerValue.style.cssText = 'font-size: 14px; color: #FFC107;';\n        triggerValue.textContent = mga__( '0', 'lightbox-jlg' );\n        triggerCard.appendChild(triggerLabel);\n        triggerCard.appendChild(triggerValue);\n        statsGrid.appendChild(triggerCard);\n\n        const slidesCard = document.createElement('div');\n        slidesCard.style.cssText = 'background: #1c1f23; padding: 6px 8px; border-radius: 4px; grid-column: 1 / -1;';\n        const slidesLabel = document.createElement('strong');\n        slidesLabel.style.cssText = 'display: block; margin-bottom: 4px; color: #ccc;';\n        slidesLabel.textContent = mga__( 'M\u00E9dias visibles\u00A0:', 'lightbox-jlg' );\n        const slidesValue = document.createElement('div');\n        slidesValue.id = 'mga-debug-visible-slides';\n        slidesValue.style.cssText = 'font-size: 13px; color: #FFEB3B;';\n        slidesValue.textContent = mga__( 'N/A', 'lightbox-jlg' );\n        slidesCard.appendChild(slidesLabel);\n        slidesCard.appendChild(slidesValue);\n        statsGrid.appendChild(slidesCard);\n\n        panel.appendChild(statsGrid);\n\n        const forceButton = document.createElement('button');\n        forceButton.id = 'mga-force-open';\n        forceButton.style.cssText = 'background: #0073aa; color: white; border: none; padding: 8px 12px; cursor: pointer; margin-top: 10px; width: 100%;';\n        forceButton.textContent = mga__( \"Forcer l'ouverture (Test)\", 'lightbox-jlg' );\n        panel.appendChild(forceButton);\n\n        const logContainer = document.createElement('div');\n        logContainer.id = 'mga-log-container';\n        logContainer.style.cssText = 'margin-top: 15px; max-height: 200px; overflow-y: auto; background: #111; padding: 5px;';\n\n        const logTitle = document.createElement('h5');\n        logTitle.style.cssText = 'margin:0 0 5px; padding:0; color: #ccc;';\n        logTitle.textContent = mga__( \"Journal d'\u00E9v\u00E9nements\u00A0:\", 'lightbox-jlg' );\n        logContainer.appendChild(logTitle);\n\n        const logContent = document.createElement('div');\n        logContent.id = 'mga-debug-log';\n        logContainer.appendChild(logContent);\n\n        panel.appendChild(logContainer);\n\n        document.body.appendChild(panel);\n        state.panel = panel;\n        state.logContainer = logContent;\n        state.forceOpenAttached = false;\n        return panel;\n    }\n\n    function ensureActive() {\n        if (!state.active) {\n            return false;\n        }\n        if (!state.panel) {\n            createPanel();\n        }\n        return !!state.panel;\n    }\n\n    function startTimer() {\n        if (!ensureActive()) {\n            return;\n        }\n        stopTimer();\n        state.startTime = performance.now();\n        state.timerInterval = setInterval(() => {\n            updateInfo(\n                'mga-debug-realtime',\n                mgaSprintf(mga__( '%ss', 'lightbox-jlg' ), ((performance.now() - state.startTime) / 1000).toFixed(2)),\n                '#4CAF50'\n            );\n        }, 100);\n    }\n\n    function restartTimer() {\n        startTimer();\n    }\n\n    function stopTimer() {\n        if (state.timerInterval) {\n            clearInterval(state.timerInterval);\n            state.timerInterval = null;\n        }\n    }\n\n    function init() {\n        if (!state.active) {\n            createPanel();\n            state.active = true;\n        } else if (!state.panel) {\n            createPanel();\n        }\n        startTimer();\n    }\n\n    function normalizeMessage(message) {\n        if (typeof message === 'string') {\n            return message;\n        }\n        if (message instanceof Error && message.message) {\n            return message.message;\n        }\n        if (typeof message === 'object' && message !== null) {\n            try {\n                return JSON.stringify(message);\n            } catch (error) {\n                return String(message);\n            }\n        }\n        if (typeof message === 'undefined' || message === null) {\n            return '';\n        }\n        return String(message);\n    }\n\n    function log(message, isError = false) {\n        const time = (performance.now() / 1000).toFixed(3);\n        const method = isError ? 'error' : 'log';\n        const normalizedMessage = normalizeMessage(message);\n        if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n            console[method](mgaSprintf(mga__( 'MGA [%1$ss]\u00A0: %2$s', 'lightbox-jlg' ), time, normalizedMessage));\n        }\n        if (!ensureActive() || !state.logContainer) {\n            return;\n        }\n        const entry = document.createElement('p');\n        entry.style.cssText = `margin: 2px 5px; padding: 0; color: ${isError ? '#F44336' : '#4CAF50'}; font-size: 11px; word-break: break-all;`;\n        const timestamp = document.createElement('span');\n        timestamp.style.color = '#888';\n        timestamp.textContent = mgaSprintf(mga__( '[%ss]', 'lightbox-jlg' ), time);\n        entry.appendChild(timestamp);\n        entry.appendChild(document.createTextNode(' > '));\n        entry.appendChild(document.createTextNode(normalizedMessage));\n        state.logContainer.appendChild(entry);\n        state.logContainer.scrollTop = state.logContainer.scrollHeight;\n    }\n\n    function shareAction(action, details = {}) {\n        const normalizedAction = typeof action === 'string' && action ? action : 'unknown';\n        const hasDetails = details && typeof details === 'object' && Object.keys(details).length > 0;\n        const message = hasDetails\n            ? mgaSprintf(\n                mga__( 'Partage [%1$s]\u00A0: %2$s', 'lightbox-jlg' ),\n                normalizedAction,\n                normalizeMessage(details)\n            )\n            : mgaSprintf(mga__( 'Partage [%s]', 'lightbox-jlg' ), normalizedAction);\n\n        log(message);\n\n        if (hasDetails && typeof console !== 'undefined' && typeof console.table === 'function') {\n            try {\n                console.table(details);\n            } catch (error) {\n                console.debug(details);\n            }\n        }\n    }\n\n    function updateInfo(key, value, color = '#fff') {\n        if (!ensureActive()) {\n            return;\n        }\n        const element = document.getElementById(key);\n        if (element) {\n            element.textContent = value;\n            element.style.color = color;\n        }\n    }\n\n    function updateVisibleSlides(text) {\n        updateInfo('mga-debug-visible-slides', text, '#FFEB3B');\n    }\n\n    function onForceOpen(callback) {\n        if (!ensureActive() || typeof callback !== 'function') {\n            return;\n        }\n        const panel = createPanel();\n        const button = panel.querySelector('#mga-force-open');\n        if (button && !state.forceOpenAttached) {\n            button.addEventListener('click', callback);\n            state.forceOpenAttached = true;\n        }\n    }\n\n    function table(data) {\n        if (typeof console !== 'undefined' && typeof console.table === 'function') {\n            console.table(data);\n        }\n    }\n\n    global.mgaDebug = {\n        enabled: true,\n        init,\n        log,\n        updateInfo,\n        updateVisibleSlides,\n        onForceOpen,\n        stopTimer,\n        restartTimer,\n        table,\n        shareAction,\n    };\n})(window);\n"],
  "mappings": "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",
  "names": ["TOKEN_REGEX", "createFallbackSprintf", "format", "args", "autoIndex", "match", "position", "argIndex", "type", "numericIndex", "value", "coerced", "createSprintf", "i18n", "createTranslate", "text", "resolveI18n", "globalObject", "global", "mgaI18n", "resolveI18n", "mga__", "createTranslate", "mgaSprintf", "createSprintf", "state", "createPanel", "existing", "panel", "title", "statsGrid", "statusCard", "statusLabel", "statusValue", "realtimeCard", "realtimeLabel", "realtimeValue", "autoplayCard", "autoplayLabel", "autoplayValue", "contentCard", "contentLabel", "contentValue", "triggerCard", "triggerLabel", "triggerValue", "slidesCard", "slidesLabel", "slidesValue", "forceButton", "logContainer", "logTitle", "logContent", "ensureActive", "startTimer", "stopTimer", "updateInfo", "restartTimer", "init", "normalizeMessage", "message", "error", "log", "isError", "time", "method", "normalizedMessage", "entry", "timestamp", "shareAction", "action", "details", "normalizedAction", "hasDetails", "key", "value", "color", "element", "updateVisibleSlides", "text", "onForceOpen", "callback", "button", "table", "data"]
}
