{
  "version": 3,
  "sources": ["../src/shared/sprintf.js", "../src/debug.js"],
  "sourcesContent": ["const TOKEN_REGEX = /%(\\d+\\$)?[sd]/g;\n\nconst createFallbackSprintf = () => (format, ...args) => {\n    let autoIndex = 0;\n\n    return String(format).replace(TOKEN_REGEX, (match, position) => {\n        let argIndex;\n        const type = match.charAt(match.length - 1);\n\n        if (position) {\n            const numericIndex = parseInt(position.slice(0, -1), 10);\n\n            if (Number.isNaN(numericIndex) || numericIndex <= 0) {\n                return '';\n            }\n\n            argIndex = numericIndex - 1;\n        } else {\n            argIndex = autoIndex;\n            autoIndex += 1;\n        }\n\n        const value = argIndex >= 0 && argIndex < args.length ? args[argIndex] : undefined;\n\n        if (type === 'd') {\n            const coerced = parseInt(value, 10);\n            return Number.isNaN(coerced) ? '' : String(coerced);\n        }\n\n        if (typeof value === 'undefined') {\n            return '';\n        }\n\n        return String(value);\n    });\n};\n\nexport const createSprintf = (i18n) => {\n    if (i18n && typeof i18n.sprintf === 'function') {\n        return i18n.sprintf;\n    }\n\n    return createFallbackSprintf();\n};\n\nexport const createTranslate = (i18n) => {\n    if (i18n && typeof i18n.__ === 'function') {\n        return i18n.__;\n    }\n\n    return (text) => text;\n};\n\nexport const resolveI18n = (globalObject) => {\n    if (!globalObject || typeof globalObject !== 'object') {\n        return null;\n    }\n\n    if (globalObject.wp && globalObject.wp.i18n) {\n        return globalObject.wp.i18n;\n    }\n\n    return null;\n};\n\nexport const getSharedI18n = () => resolveI18n(typeof window !== 'undefined' ? window : globalThis);\n\nexport const getSharedSprintf = () => createSprintf(getSharedI18n());\n\nexport const getSharedTranslate = () => createTranslate(getSharedI18n());\n\nexport default {\n    createSprintf,\n    createTranslate,\n    getSharedI18n,\n    getSharedSprintf,\n    getSharedTranslate,\n};\n", "import { createSprintf, createTranslate, resolveI18n } from './shared';\n\n(function(global) {\n    \"use strict\";\n\n    const mgaI18n = resolveI18n(global);\n    const mga__ = createTranslate(mgaI18n);\n    const mgaSprintf = createSprintf(mgaI18n);\n\n    const state = {\n        panel: null,\n        logContainer: null,\n        timerInterval: null,\n        startTime: 0,\n        active: false,\n        forceOpenAttached: false,\n        announcer: null,\n    };\n\n    const TONE_CLASSES = {\n        default: 'mga-debug-value--default',\n        success: 'mga-debug-value--success',\n        warning: 'mga-debug-value--warning',\n        error: 'mga-debug-value--error',\n        info: 'mga-debug-value--info',\n        accent: 'mga-debug-value--accent',\n    };\n\n    const TONE_CLASS_LIST = Object.values(TONE_CLASSES);\n\n    function ensureAnnouncer() {\n        if (state.announcer && document.body.contains(state.announcer)) {\n            return state.announcer;\n        }\n\n        let announcer = document.getElementById('mga-debug-announcer');\n\n        if (!announcer) {\n            announcer = document.createElement('div');\n            announcer.id = 'mga-debug-announcer';\n            announcer.className = 'mga-debug-announcer';\n            announcer.setAttribute('role', 'status');\n            announcer.setAttribute('aria-live', 'polite');\n            announcer.setAttribute('aria-atomic', 'true');\n            document.body.appendChild(announcer);\n        }\n\n        state.announcer = announcer;\n        return announcer;\n    }\n\n    function announcePanelState(isOpen) {\n        const announcer = ensureAnnouncer();\n        if (!announcer) {\n            return;\n        }\n\n        announcer.textContent = isOpen\n            ? mga__( 'Panneau de debug MGA affich\u00E9', 'lightbox-jlg' )\n            : mga__( 'Panneau de debug MGA masqu\u00E9', 'lightbox-jlg' );\n    }\n\n    function createPanel() {\n        if (state.panel) {\n            return state.panel;\n        }\n\n        const existing = document.getElementById('mga-debug-panel');\n        if (existing) {\n            state.panel = existing;\n            state.logContainer = existing.querySelector('#mga-debug-log');\n            state.panel.setAttribute('aria-expanded', 'true');\n            const announcer = ensureAnnouncer();\n            if (announcer) {\n                announcer.textContent = '';\n            }\n            announcePanelState(true);\n            return state.panel;\n        }\n\n        const panel = document.createElement('div');\n        panel.id = 'mga-debug-panel';\n        panel.className = 'mga-debug-panel';\n        panel.setAttribute('role', 'region');\n        panel.setAttribute('aria-label', mga__( 'Panneau de diagnostic MGA', 'lightbox-jlg' ));\n        panel.setAttribute('aria-live', 'polite');\n        panel.setAttribute('aria-expanded', 'true');\n\n        const title = document.createElement('h4');\n        title.className = 'mga-debug-title';\n        title.textContent = mga__( 'Debug MGA Performance', 'lightbox-jlg' );\n        panel.appendChild(title);\n\n        const statsGrid = document.createElement('div');\n        statsGrid.className = 'mga-debug-grid';\n\n        const statusCard = document.createElement('div');\n        statusCard.className = 'mga-debug-card mga-debug-card--full';\n        const statusLabel = document.createElement('strong');\n        statusLabel.className = 'mga-debug-label';\n        statusLabel.textContent = mga__( 'Statut\u00A0:', 'lightbox-jlg' );\n        const statusValue = document.createElement('div');\n        statusValue.id = 'mga-debug-status';\n        statusValue.className = 'mga-debug-value mga-debug-status ' + TONE_CLASSES.default;\n        statusValue.setAttribute('role', 'status');\n        statusValue.setAttribute('aria-live', 'polite');\n        statusValue.setAttribute('aria-atomic', 'true');\n        statusValue.textContent = mga__( 'Inconnu', 'lightbox-jlg' );\n        statusCard.appendChild(statusLabel);\n        statusCard.appendChild(statusValue);\n        statsGrid.appendChild(statusCard);\n\n        const realtimeCard = document.createElement('div');\n        realtimeCard.className = 'mga-debug-card';\n        const realtimeLabel = document.createElement('strong');\n        realtimeLabel.className = 'mga-debug-label';\n        realtimeLabel.textContent = mga__( 'Chronom\u00E8tre r\u00E9el\u00A0:', 'lightbox-jlg' );\n        const realtimeValue = document.createElement('div');\n        realtimeValue.id = 'mga-debug-realtime';\n        realtimeValue.className = 'mga-debug-value ' + TONE_CLASSES.success;\n        realtimeValue.setAttribute('aria-live', 'polite');\n        realtimeValue.setAttribute('aria-atomic', 'true');\n        realtimeValue.textContent = mgaSprintf( mga__( '%ss', 'lightbox-jlg' ), '0.00' );\n        realtimeCard.appendChild(realtimeLabel);\n        realtimeCard.appendChild(realtimeValue);\n        statsGrid.appendChild(realtimeCard);\n\n        const autoplayCard = document.createElement('div');\n        autoplayCard.className = 'mga-debug-card';\n        const autoplayLabel = document.createElement('strong');\n        autoplayLabel.className = 'mga-debug-label';\n        autoplayLabel.textContent = mga__( 'Timer Autoplay\u00A0:', 'lightbox-jlg' );\n        const autoplayValue = document.createElement('div');\n        autoplayValue.id = 'mga-debug-autoplay-time';\n        autoplayValue.className = 'mga-debug-value ' + TONE_CLASSES.warning;\n        autoplayValue.setAttribute('aria-live', 'polite');\n        autoplayValue.setAttribute('aria-atomic', 'true');\n        autoplayValue.textContent = mga__( 'N/A', 'lightbox-jlg' );\n        autoplayCard.appendChild(autoplayLabel);\n        autoplayCard.appendChild(autoplayValue);\n        statsGrid.appendChild(autoplayCard);\n\n        const contentCard = document.createElement('div');\n        contentCard.className = 'mga-debug-card';\n        const contentLabel = document.createElement('strong');\n        contentLabel.className = 'mga-debug-label';\n        contentLabel.textContent = mga__( 'Zone de contenu\u00A0:', 'lightbox-jlg' );\n        const contentValue = document.createElement('div');\n        contentValue.id = 'mga-debug-content-area';\n        contentValue.className = 'mga-debug-value mga-debug-value--info mga-debug-value--wrap';\n        contentValue.setAttribute('aria-live', 'polite');\n        contentValue.setAttribute('aria-atomic', 'true');\n        contentValue.textContent = mga__( 'N/A', 'lightbox-jlg' );\n        contentCard.appendChild(contentLabel);\n        contentCard.appendChild(contentValue);\n        statsGrid.appendChild(contentCard);\n\n        const triggerCard = document.createElement('div');\n        triggerCard.className = 'mga-debug-card';\n        const triggerLabel = document.createElement('strong');\n        triggerLabel.className = 'mga-debug-label';\n        triggerLabel.textContent = mga__( 'Images d\u00E9clencheuses\u00A0:', 'lightbox-jlg' );\n        const triggerValue = document.createElement('div');\n        triggerValue.id = 'mga-debug-trigger-img';\n        triggerValue.className = 'mga-debug-value ' + TONE_CLASSES.warning;\n        triggerValue.setAttribute('aria-live', 'polite');\n        triggerValue.setAttribute('aria-atomic', 'true');\n        triggerValue.textContent = mga__( '0', 'lightbox-jlg' );\n        triggerCard.appendChild(triggerLabel);\n        triggerCard.appendChild(triggerValue);\n        statsGrid.appendChild(triggerCard);\n\n        const slidesCard = document.createElement('div');\n        slidesCard.className = 'mga-debug-card mga-debug-card--full';\n        const slidesLabel = document.createElement('strong');\n        slidesLabel.className = 'mga-debug-label';\n        slidesLabel.textContent = mga__( 'M\u00E9dias visibles\u00A0:', 'lightbox-jlg' );\n        const slidesValue = document.createElement('div');\n        slidesValue.id = 'mga-debug-visible-slides';\n        slidesValue.className = 'mga-debug-value ' + TONE_CLASSES.accent;\n        slidesValue.setAttribute('aria-live', 'polite');\n        slidesValue.setAttribute('aria-atomic', 'true');\n        slidesValue.textContent = mga__( 'N/A', 'lightbox-jlg' );\n        slidesCard.appendChild(slidesLabel);\n        slidesCard.appendChild(slidesValue);\n        statsGrid.appendChild(slidesCard);\n\n        panel.appendChild(statsGrid);\n\n        const forceButton = document.createElement('button');\n        forceButton.id = 'mga-force-open';\n        forceButton.type = 'button';\n        forceButton.className = 'mga-debug-button';\n        forceButton.textContent = mga__( \"Forcer l'ouverture (Test)\", 'lightbox-jlg' );\n        panel.appendChild(forceButton);\n\n        const logContainer = document.createElement('div');\n        logContainer.id = 'mga-log-container';\n        logContainer.className = 'mga-debug-log-container';\n        logContainer.setAttribute('role', 'region');\n        logContainer.setAttribute('aria-label', mga__( \"Journal d'\u00E9v\u00E9nements\", 'lightbox-jlg' ));\n\n        const logTitle = document.createElement('h5');\n        logTitle.className = 'mga-debug-log-title';\n        logTitle.textContent = mga__( \"Journal d'\u00E9v\u00E9nements\u00A0:\", 'lightbox-jlg' );\n        logContainer.appendChild(logTitle);\n\n        const logContent = document.createElement('div');\n        logContent.id = 'mga-debug-log';\n        logContent.className = 'mga-debug-log';\n        logContent.setAttribute('role', 'log');\n        logContent.setAttribute('aria-live', 'polite');\n        logContent.setAttribute('aria-relevant', 'additions');\n        logContainer.appendChild(logContent);\n\n        panel.appendChild(logContainer);\n\n        ensureAnnouncer();\n\n        document.body.appendChild(panel);\n        state.panel = panel;\n        state.logContainer = logContent;\n        state.forceOpenAttached = false;\n        announcePanelState(true);\n        return panel;\n    }\n\n    function ensureActive() {\n        if (!state.active) {\n            return false;\n        }\n        if (!state.panel) {\n            createPanel();\n        }\n        return !!state.panel;\n    }\n\n    function startTimer() {\n        if (!ensureActive()) {\n            return;\n        }\n        stopTimer();\n        state.startTime = performance.now();\n        state.timerInterval = setInterval(() => {\n            updateInfo(\n                'mga-debug-realtime',\n                mgaSprintf(mga__( '%ss', 'lightbox-jlg' ), ((performance.now() - state.startTime) / 1000).toFixed(2)),\n                'success'\n            );\n        }, 100);\n    }\n\n    function restartTimer() {\n        startTimer();\n    }\n\n    function stopTimer() {\n        if (state.timerInterval) {\n            clearInterval(state.timerInterval);\n            state.timerInterval = null;\n        }\n    }\n\n    function destroy(options = {}) {\n        const reason = typeof options === 'string'\n            ? options\n            : (options && typeof options.reason === 'string' ? options.reason : 'manual');\n\n        stopTimer();\n\n        if (state.panel) {\n            state.panel.setAttribute('aria-expanded', 'false');\n        }\n\n        announcePanelState(false);\n\n        if (state.panel && state.panel.parentNode) {\n            state.panel.parentNode.removeChild(state.panel);\n        }\n\n        state.panel = null;\n        state.logContainer = null;\n        state.forceOpenAttached = false;\n        state.active = false;\n\n        if (typeof console !== 'undefined' && typeof console.info === 'function') {\n            const label = reason && typeof reason === 'string' && reason.trim()\n                ? reason.trim()\n                : 'manual';\n            console.info(mgaSprintf(mga__( 'Debug MGA d\u00E9sactiv\u00E9 (%s).', 'lightbox-jlg' ), label));\n        }\n    }\n\n    function init() {\n        if (!state.active) {\n            createPanel();\n            state.active = true;\n        } else if (!state.panel) {\n            createPanel();\n        }\n        startTimer();\n    }\n\n    function normalizeMessage(message) {\n        if (typeof message === 'string') {\n            return message;\n        }\n        if (message instanceof Error && message.message) {\n            return message.message;\n        }\n        if (typeof message === 'object' && message !== null) {\n            try {\n                return JSON.stringify(message);\n            } catch (error) {\n                return String(message);\n            }\n        }\n        if (typeof message === 'undefined' || message === null) {\n            return '';\n        }\n        return String(message);\n    }\n\n    function log(message, isError = false) {\n        const time = (performance.now() / 1000).toFixed(3);\n        const method = isError ? 'error' : 'log';\n        const normalizedMessage = normalizeMessage(message);\n        if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n            console[method](mgaSprintf(mga__( 'MGA [%1$ss]\u00A0: %2$s', 'lightbox-jlg' ), time, normalizedMessage));\n        }\n        if (!ensureActive() || !state.logContainer) {\n            return;\n        }\n        const entry = document.createElement('p');\n        entry.className = 'mga-debug-log-entry ' + (isError ? 'mga-debug-log-entry--error' : 'mga-debug-log-entry--info');\n\n        const timestamp = document.createElement('span');\n        timestamp.className = 'mga-debug-log-timestamp';\n        timestamp.textContent = mgaSprintf(mga__( '[%ss]', 'lightbox-jlg' ), time);\n        entry.appendChild(timestamp);\n\n        const separator = document.createElement('span');\n        separator.className = 'mga-debug-log-separator';\n        separator.setAttribute('aria-hidden', 'true');\n        separator.textContent = ' \u203A ';\n        entry.appendChild(separator);\n\n        const messageNode = document.createElement('span');\n        messageNode.className = 'mga-debug-log-message';\n        messageNode.textContent = normalizedMessage;\n        entry.appendChild(messageNode);\n\n        state.logContainer.appendChild(entry);\n        state.logContainer.scrollTop = state.logContainer.scrollHeight;\n    }\n\n    function shareAction(action, details = {}) {\n        const normalizedAction = typeof action === 'string' && action ? action : 'unknown';\n        const hasDetails = details && typeof details === 'object' && Object.keys(details).length > 0;\n        const message = hasDetails\n            ? mgaSprintf(\n                mga__( 'Partage [%1$s]\u00A0: %2$s', 'lightbox-jlg' ),\n                normalizedAction,\n                normalizeMessage(details)\n            )\n            : mgaSprintf(mga__( 'Partage [%s]', 'lightbox-jlg' ), normalizedAction);\n\n        log(message);\n\n        if (hasDetails && typeof console !== 'undefined' && typeof console.table === 'function') {\n            try {\n                console.table(details);\n            } catch (error) {\n                console.debug(details);\n            }\n        }\n    }\n\n    function updateInfo(key, value, tone = 'default') {\n        if (!ensureActive()) {\n            return;\n        }\n        const element = document.getElementById(key);\n        if (element) {\n            element.textContent = value;\n            if (element.classList) {\n                element.classList.add('mga-debug-value');\n                element.classList.remove(...TONE_CLASS_LIST);\n                const toneClass = TONE_CLASSES[tone] || TONE_CLASSES.default;\n                element.classList.add(toneClass);\n            }\n        }\n    }\n\n    function updateVisibleSlides(text) {\n        updateInfo('mga-debug-visible-slides', text, 'accent');\n    }\n\n    function onForceOpen(callback) {\n        if (!ensureActive() || typeof callback !== 'function') {\n            return;\n        }\n        const panel = createPanel();\n        const button = panel.querySelector('#mga-force-open');\n        if (button && !state.forceOpenAttached) {\n            button.addEventListener('click', callback);\n            state.forceOpenAttached = true;\n        }\n    }\n\n    function table(data) {\n        if (typeof console !== 'undefined' && typeof console.table === 'function') {\n            console.table(data);\n        }\n    }\n\n    global.mgaDebug = {\n        enabled: true,\n        init,\n        log,\n        updateInfo,\n        updateVisibleSlides,\n        onForceOpen,\n        stopTimer,\n        restartTimer,\n        table,\n        shareAction,\n        destroy,\n    };\n})(window);\n"],
  "mappings": "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",
  "names": ["TOKEN_REGEX", "createFallbackSprintf", "format", "args", "autoIndex", "match", "position", "argIndex", "type", "numericIndex", "value", "coerced", "createSprintf", "i18n", "createTranslate", "text", "resolveI18n", "globalObject", "global", "mgaI18n", "resolveI18n", "mga__", "createTranslate", "mgaSprintf", "createSprintf", "state", "TONE_CLASSES", "TONE_CLASS_LIST", "ensureAnnouncer", "announcer", "announcePanelState", "isOpen", "createPanel", "existing", "panel", "title", "statsGrid", "statusCard", "statusLabel", "statusValue", "realtimeCard", "realtimeLabel", "realtimeValue", "autoplayCard", "autoplayLabel", "autoplayValue", "contentCard", "contentLabel", "contentValue", "triggerCard", "triggerLabel", "triggerValue", "slidesCard", "slidesLabel", "slidesValue", "forceButton", "logContainer", "logTitle", "logContent", "ensureActive", "startTimer", "stopTimer", "updateInfo", "restartTimer", "destroy", "options", "reason", "label", "init", "normalizeMessage", "message", "error", "log", "isError", "time", "method", "normalizedMessage", "entry", "timestamp", "separator", "messageNode", "shareAction", "action", "details", "normalizedAction", "hasDetails", "key", "value", "tone", "element", "toneClass", "updateVisibleSlides", "text", "onForceOpen", "callback", "button", "table", "data"]
}
